``` Unified Diagnostic Services (UDS) ```

Need-----

Basics of UDS Over CAN |

UDS Diagnostics

►Rapid evolution of Electronics in Automotive - need to track different parameters to control vehicle

➤Diagnostic systems were developed to detect faults Many Automotive OEMs with own software

architectures - leads difficult to develop one tool

➤SAE developed standard protocol named as UDS

Each ECU in vehicle must follow UDS to communicate

➤Tester triggers various actions in the ECU


```Client-Server Topology```

➤There is a external hardware tool, connetcs to the vehicle either by KWP 2000, CAN OR LIN protocols

►This tool is called tester - sends different commands

►Tester triggers various commands in the ECU

➤ECU receives that commands (Requests) & provide service accordingly

ECU is referred as server here


```Introduction```

➤Communication protocol - Used to diagnose faults, firmware updates and routine testing etc

➤ISO 14229 standard defines UDS Protocol in 5 parts.
Part 1 covers the UDS services


➤UDS is a collection of various diagnostic services

►Each service has unique Service Identifier (SID)

►UDS Defines

What are available Services

Format of Request & Response messages

Timing Parameters

Service Handling Mechanism etc.



```UDS Message Structure```

➤UDS is a Request based protocol

➤A Diagnostic UDS request on CAN contains various

fileds

➤ CAN ID

➤ Protocol Control Information (PCI)

➤ Service Identifier (SID)

➤ Sub Function Byte (optional)

➤ Request Data Parameters

➤ Padding (optional)


CAN ISO-TP - Transport Protocol (ISO 15765-2)

When implementing diagnostics on CAN, one challenge is the size of the CAN frame payload: For Classical CAN frames, this is limited to 8 bytes and for CAN FD the payload is limited to 64 bytes. Vehicle diagnostics often involves communication of far larger payloads.

ISO 15765-2 was established to solve the challenge of large payloads for CAN based vehicle diagnostics.

The standard specifies a transport protocol and network layer services for use in CAN based vehicle networks. The most common use cases include UDS (ISO 14229-1), OBD (SAE J1979, ISO 15031-5) and world-wide harmonized OBD aka WWH-OBD (ISO 27145).

The ISO-TP standard outlines how to communicate CAN data payloads up to 4095 bytes through segmentation, flow control and reassembly. ISO-TP defines specific CAN frames for enabling this communication as shown below:

CAN ISO-TP Frame Types Single First Consecutive Flow Control

The flow control frame is used to 'configure' the subsequent communication. It can be constructed as below:
ISO-TP Flow Control Frame Types

A few comments:

    In the simplest case, the FC payload can be set to 30 00 00 00 00 00 00 00 (all remaining frames to be sent without delay)
    Alternatively, one can decide to perform more granular control over the communication by e.g. alternating between the Wait and Continue commands, as well as specifying a specific separation time (in milliseconds) between frames




    The ISO-TP frame type can be identified from the first nibble of the first byte (0x0, 0x1, 0x2, 0x3)
    The total frame size can be up to 4095 bytes (0xFFF) as evident from the FF frame
    The CF index runs from 1 to 15 (0xF) and is then reset if more data is to be sent
    Padding (e.g. 0x00, 0xAA, ...) is used to ensure the frame payloads equal 8 bytes in length





Below we outline how the ISO-TP protocol works for single-frame and multi-frame communication:

ISO-TP: Single-frame communication

In vehicle diagnostics, communication is initiated by a tester tool sending a request. This request frame is a Single Frame (SF).

In the simplest case, a tester tool sends a Single Frame to request data from an ECU. If the response can be contained in a 7-byte payload, the ECU provides a Single Frame response.
ISO-TP Single Frame Request Response UDS



ISO-TP Transport Protocol UDS CAN bus Multi Frame
ISO-TP: Multi-frame communication

When the payload exceeds 7 bytes, it needs to be split across multiple CAN frames.

As before, a tester starts by sending a Single Frame (SF) request to an ECU (sender). However, in this case the response exceeds 7 bytes.

Because of this, the ECU sends a First Frame (FF) that contains information on the total packet length (8 to 4095 bytes) as well as the initial chunk of data.

When the tester receives the FF, it will send a Flow Control (FC) frame, which tells the ECU how the rest of the data transfer should be transmitted.

Following this, the ECU will send Consecutive Frames (CF) that contain the remaining data payload.

